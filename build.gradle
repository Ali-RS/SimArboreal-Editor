apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'

version='1.0.1-SNAPSHOT'
group='com.simsilica'

mainClassName = 'com.simsilica.arboreal.TreeEditor'

applicationDefaultJvmArgs = ["-Xmx512m", "-XX:MaxDirectMemorySize=512m"]

repositories {
    mavenLocal()
    jcenter()
    
    // Temporary until JME jars are in jcenter()   
    maven { url "http://dl.bintray.com/jmonkeyengine/org.jmonkeyengine" }
    
    // Meta-jb stuff        
    maven { url "http://svn.code.sf.net/p/meta-jb/svn/trunk/dev/m2-repo/" }        
}

// Make sure the build file declares what it actually imports
configurations.compile {
    transitive = false
}

sourceSets.main.resources { 
    srcDirs += "src/main/java" 
    exclude "**/*.java" 
    exclude "**/*.tmp" 
}

// In this section you declare the dependencies for your production and test code
dependencies {

    compile "org.jmonkeyengine:jme3-core:3.1.+"
    compile "org.jmonkeyengine:jme3-desktop:3.1.+" 
    compile "org.jmonkeyengine:jme3-effects:3.1.+" 
    compile "org.jmonkeyengine:jme3-lwjgl:3.1.+" 
     
    compile "com.simsilica:sim-arboreal:1.0.1-SNAPSHOT"
    runtime 'com.simsilica:sim-arboreal:1.0.1-SNAPSHOT:assets'

    compile "com.simsilica:lemur:1.6.+"
    compile "com.simsilica:lemur-proto:1.5.+"
    compile "com.simsilica:lemur-props:1.0.+"
    runtime 'org.codehaus.groovy:groovy-all:2.4.5'

    compile "com.simsilica:pager:1.0.+"
    compile "com.simsilica:sim-fx:1.0.+"
    runtime "com.simsilica:sim-fx:1.0.+:assets"

    compile 'org.meta-jb:meta-jb-json:1.0.1'

    compile 'org.slf4j:slf4j-api:1.7.13'
        
    runtime files("assets")        
}


// Configuration to produce maven-repo style -sources and -javadoc jars
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    exclude '**/.backups' 
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
 
task assetsJar(type: Jar) {
    classifier = 'assets'
    from file('assets')
    exclude '**/*.psd' 
    exclude '**/.backups' 
}
 
artifacts {
    archives sourcesJar
    archives javadocJar
    archives assetsJar
}


